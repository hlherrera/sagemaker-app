name: ${self:custom.stage}PythonModelDeployment
definition:
  Comment: "State Machine for AWS Multi Model Deployment from S3 Model storage"
  StartAt: saveModelIntoDB
  States:
    # Save Model to DynamoDB Client App
    saveModelIntoDB:
      Type: Task
      Resource:
        Fn::GetAtt: [ChameleonSaver, Arn]
      Next: CheckSaveData

    # Check if model was saved
    CheckSaveData:
      Type: Choice
      Choices:
        - Variable: "$.error"
          NumericEquals: 1
          Next: FailedState
      Default: UploadModel

    # Upload Model to Chameleon S3
    UploadModel:
      Type: Task
      ResultPath: "$"
      Resource:
        Fn::GetAtt: [ChameleonUploader, Arn]
      Next: CheckUploaded

    # Check if model was uploaded
    CheckUploaded:
      Type: Choice
      Choices:
        - Variable: "$.error"
          NumericEquals: 1
          Next: FailedState
      Default: DeployModel

    # Deploy Model returning Endpoint
    DeployModel:
      Type: Task
      Resource:
        Fn::GetAtt: [ModelDeployment, Arn]
      Next: ChooseIfWait

    ChooseIfWait:
      Type: Choice
      Choices:
        - Variable: "$.isVolatile"
          NumericEquals: 1
          Next: TimeToLive
      Default: FinalState

    TimeToLive:
      Type: "Wait"
      Seconds: 4100
      Next: "ModelDestroy"

    ModelDestroy:
      Type: Task
      Resource:
        Fn::GetAtt: [modelDestroy, Arn]
      Next: FinalState

    FinalState:
      Type: Succeed

    FailedState:
      Type: Task
      Resource:
        Fn::GetAtt: [chameleonSageMakerError, Arn]
      Next: Error

    Error:
      Type: Fail
