Resources:
  ChameleonLogsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "${self:provider.environment.CHAMELEON_APP_LOGS_TABLE}"
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      # Set the capacity to auto-scale
      BillingMode: PAY_PER_REQUEST
  ChameleonProjectTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "${self:provider.environment.CHAMELEON_PROJECTS_TABLE}"
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      TimeToLiveSpecification:
        AttributeName: expireAt
        Enabled: true
      # Set the capacity to auto-scale
      BillingMode: PAY_PER_REQUEST
  ModelDeployEvent:
    Type: AWS::Events::EventBus
    Properties:
      Name: ${env:EVENT_BUS_NAME}
  ModelDeployEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "Model Deploy EventRule"
      EventBusName: ${env:EVENT_BUS_NAME}
      EventPattern:
        source:
          - ${env:EVENT_BUS_SOURCE}
        detail-type:
          - ${env:EVENT_BUS_TYPE}
      State: "ENABLED"
      Targets:
        - Arn:
            Fn::GetAtt:
              - "ChameleonSageMakerErrorLambdaFunction"
              - "Arn"
          Id: "on-error-lambda-target"
  PermissionToInvokeMLOnErrorLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: "ChameleonSageMakerErrorLambdaFunction"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn:
        Fn::GetAtt:
          - "ModelDeployEventRule"
          - "Arn"
